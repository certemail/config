
----- BOOT / GRUB2
* Boot order:
    1) System firmware loads the boot loader
    2) Boot loader loads its configuration from disk (in /boot)
    3) Boot loader presents users with a menu
    4) Kernel and initramfs are loaded from disk
    5) Kernel initializes and launches /sbin/init from initramfs
    6) Basic hardware initialization takes place
    7) System root file system is mounted read-only on /sysroot
    8) Root file system is switched and control is passed over to new systemd instance
    9) All units for default target are started

* Stage 1 of the GRUB2 bootloader is installed in the MBR (or GUID table)
    - serves as a pointer to the other information from the GRUB2 menu

* To make changes only modify: /etc/default/grub
    # grub2-mkconifg -o /boot/grub2/grub.cfg

* Recover lost root password:
   -interrupt boot at GRUB menu and press 'e'
   -append 'rd.break' to linux16 command 
   -Ctrl-x to boot system
   -remount root /sysroot filesystem as read-write:
        # mount -o remount,rw /sysroot
        # chroot /sysroot
        # passwd
        # touch .autorelabel

    -NOTE: pre-built images may place multiple console= arguments to the kernel.
           when using rd.break, might need to reorder console= arguments if not getting prompt

* Syntax of /boot/grub2/grub.cfg
    -actual bootable entries are encoded inside of 'menuentry' blocks
    -linux16 points to kernel to be loaded 
    -initrd16 points to initramfs to be loaded
    -'set root' lines inside 'menuentry' point to filesystem from which GRUB2 should load kernel and initramfs; e.g., (hd0,msdos1)

* Repair corrupted boot loader:
    # grub2-install [INSTALL_DEVICE]    // e.g., /dev/sda

* Reinstall GRUB2 (if grub2-mkconfig fails)
    - list and remove all GRUB2 configuration and script files:
    # rpm -qc grub2-tools
    #/etc/default/grub
       /etc/grub.d/00_header
       /etc/grub.d/01_users
       /etc/grub.d/10_linux
       /etc/grub.d/20_linux_xen
       /etc/grub.d/20_ppc_terminfo
       /etc/grub.d/30_os-prober
       /etc/grub.d/40_custom
       /etc/grub.d/41_custom
    # rm -rf /etc/default/grub
    # rm -rf /etc/grub.d/*
    # yum reinstall grub2-tools
    # grub2-mkconfig -o /boot/grub2/grub.cfg


* GRUB2 Command Line:
* Check GRUB2 root:
    grub> echo $root

* To find or confirm partition where /boot directory is:
    grub> ls (hd0,msdos1)/grub2/grub.cfg

* To find partition with / filesystem:
    grub> insmod lvm                        
    grub> ls (lvm/rhel-root)                // if root filesystem is on LVM volume

* Change default kernel loaded at boot:
    # grep ^menuentry /boot/grub2/grub.cfg
    # grub2-set-default [MENU_ENTRY]            // 0,1,2, etc...

* Manually boot from GRUB2 command line:
    - Press 'c' for command line
    grub> insmod lvm
    grub> ls
    grub> set root=(lvm/rhel-root)                                                          // device containing root filesystem
    grub> linux16 (hd0,msdos1)/vmlinuz-3.10.0.123.e17.x86_64 root=/dev/mapper/rhel-root     // specify kernel and root directory partition
    grub> initrd16 (hd0,msdos1)/initramfs-3.10.0.123.e17.x86_64.img                         // specify intramfs
    grub> boot



----- SYSTEMD
* Important targets:
    graphical.target                // supports multiple users, graphical, text-based login
    multi-user.target               // supports multiple users, text-based login only
    rescue.target                   // sulogin prompt, basic system initialization completed,root pwd required, (read-write)
    emergency.target                // sulogin prompt, initramfs pivot complete and system root mounted on / (read-only), root pwd required

* rd.break: stops startup process before the regular root filesystem is mounted (root pwd NOT needed)

* Important directories:
    /usr/lib/systemd/system             // system defaults - dont make changes here (can be overwritten)
    /etc/systemd/system                 // make custom changes here

* Important commands:
# systemctl get-default
# systemctl set-default [TARGET]
# systemctl isolate [TARGET]
# systemctl start [TARGET]            // if going to a target that just needs add services, isolate not necessary

# systemctl mask [SERVICE]          // prevents service from ever being started (stronger than disable)
# systemctl --failed                // troubleshooting -show failed services 
# systemctl list-jobs               // troubleshooting - any jobs listed as running must complete before those listed as waiting can continue

* Boot into different target, at GRUB menu, press 'e' and append:
    systemd.unit=[DESIRED_TARGET]

* Examine logs of previous failed boot, need to enable persistent journald logging
   # mkdir -p /var/log/journal
   # chown :systemd-journal /var/log/journal
   
   # journalctl -b                  // boot messages
   # journalctl -b -p err           // show only error in boot messages
   # journalctl -b-1                // show boot messages on previous boot ID (use neg num after -b) 

* Diagnose and repair systemd boot issues:
    # systemctl enable debug-shell  // spawn a root shell on TTY9 (Ctrl-Alt-F9); disable when done!!

* Repairing file system errors in /etc/fstab at boot: 
    # systemctl daemon-reload       // must run this when using automatic recovery shell so systemd reloads configuration after editing /etc/fstab
    
